[package]
name = "wrt-instructions"
version.workspace = true
edition.workspace = true
description = "WebAssembly instruction implementations for the WRT runtime"
license.workspace = true
repository.workspace = true
readme = "README.md"
keywords = ["wasm", "webassembly", "instructions", "interpreter", "no-std"]
categories = ["wasm", "emulators", "no-std", "embedded"]

[features]
default = []
# Binary choice: std OR no_std (no alloc middle ground)
std = [
    "wrt-foundation/std",
    "wrt-sync/std",
    "wrt-math/std",
    "dep:log"]
# This crate is no_std by default, this feature is a no-op for compatibility
no_std = []

# Allocation support for no_std environments
alloc = ["wrt-foundation/alloc", "wrt-math/alloc"]
optimize = ["wrt-foundation/optimize"]

# Safety level presets using capability-based features
qm = ["wrt-foundation/dynamic-allocation", "wrt-math/qm"]
asil-a = ["wrt-foundation/bounded-collections", "wrt-math/asil-a"]
asil-b = ["wrt-foundation/bounded-collections", "wrt-math/asil-b"]
asil-c = ["wrt-foundation/static-memory-safety", "wrt-math/asil-c"]
asil-d = ["wrt-foundation/asil-d", "wrt-math/asil-d"]

# Legacy compatibility features
safe-memory = ["asil-b"]
safety-asil-b = ["asil-b"]
safety-asil-c = ["asil-c"]
safety-asil-d = ["asil-d"]

kani = []


[dependencies]
wrt-error = { workspace = true, default-features = false }
wrt-foundation = { workspace = true, default-features = false }
wrt-sync = { workspace = true, default-features = false }
wrt-math = { workspace = true, default-features = false }
log = { version = "0.4", optional = true }

# No-std support

[dev-dependencies]
proptest = "1.4.0"

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(test)'] }
unsafe_code = "forbid"
missing_docs = "allow" # Temporarily allowing missing docs - will be added systematically
# pointer_cast is not a valid Rust lint

[lints.clippy]
inline_asm_x86_att_syntax = "warn"
transmute_ptr_to_ref = "deny"
# type_id lint removed - not a valid clippy lint
dyn_trait = "warn"
float_arithmetic = "warn"
ptr_offset_with_cast = "warn"
unwrap_used = "warn"
panic = "warn"
result_unit_err = "warn"
let_underscore_drop = "warn"
must_use_candidate = "warn"
must_use_unit = "warn"
match_wildcard_for_single_variants = "warn"
never_loop = "warn"
unreachable = "warn"
static_mut_refs = "deny"
arc_mutate = "deny"
pedantic = "warn" # TODO: Enable pedantic again when dependencies are clean
debug_assert_with_mut_call = "warn" 