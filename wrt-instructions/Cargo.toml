[package]
name = "wrt-instructions"
version.workspace = true
edition.workspace = true
description = "WebAssembly instruction implementations for the WRT runtime"
license.workspace = true
repository.workspace = true
readme = "README.md"
keywords = ["wasm", "webassembly", "instructions", "interpreter", "no-std"]
categories = ["wasm", "emulators", "no-std", "embedded"]

[features]
default = []
std = [
    "wrt-types/std",
    "wrt-sync/std",
    "dep:log",
]
no_std = [
    "wrt-types/no_std",
    "alloc",
]
alloc = ["wrt-types/alloc", "wrt-sync/alloc", "dep:alloc"]
optimize = ["wrt-types/optimize"]
safety = ["wrt-types/safety"]

[dependencies]
wrt-error = { workspace = true }
wrt-types = { workspace = true }
wrt-sync = { workspace = true }
log = { version = "0.4", optional = true }

# No-std support
alloc = { version = "1.0.0", optional = true, package = "rustc-std-workspace-alloc" }

[dev-dependencies]
proptest = "1.4.0"

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(test)'] }
unsafe_code = "forbid"
missing_docs = "deny"
pointer_cast = "deny"

[lints.clippy]
inline_asm_x86_att_syntax = "warn"
transmute_ptr_to_ref = "deny"
type_id = "deny"
dyn_trait = "warn"
float_arithmetic = "warn"
ptr_offset_with_cast = "warn"
unwrap_used = "warn"
panic = "warn"
result_unit_err = "warn"
let_underscore_drop = "warn"
must_use_candidate = "warn"
must_use_unit = "warn"
match_wildcard_for_single_variants = "warn"
never_loop = "warn"
unreachable = "warn"
static_mut_reference = "deny"
arc_mutate = "deny"
pedantic = "warn"
debug_assert_with_mut_call = "warn" 