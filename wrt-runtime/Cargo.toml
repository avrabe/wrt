[package]
name = "wrt-runtime"
version.workspace = true
edition.workspace = true
description = "WebAssembly Component Model Runtime for WRT"
license.workspace = true
repository.workspace = true
documentation = "https://docs.rs/wrt-runtime"
readme = "README.md"
keywords = ["wasm", "webassembly", "runtime", "component-model"]
categories = ["wasm", "no-std"]

[lints]
workspace = true

[dependencies]
wrt-error = { workspace = true, default-features = false }
wrt-foundation = { workspace = true, default-features = false }
wrt-format = { workspace = true, default-features = false }
wrt-sync = { workspace = true, default-features = false }
# wrt-decoder = { workspace = true, default-features = false }
wrt-instructions = { workspace = true, default-features = false }
wrt-host = { workspace = true, default-features = false, optional = true }
wrt-intercept = { workspace = true, default-features = false }
wrt-platform = { workspace = true, default-features = false, optional = true }
wrt-debug = { workspace = true, default-features = false, optional = true }

# No-std support (removed invalid alloc dependency)

# No additional dependencies for now

[features]
default = [] # no_std + no_alloc by default for safety-critical core
# Binary choice: std OR no_std (no alloc middle ground)
std = [
    # "wrt-decoder/std",
    "wrt-format/std",
    "dep:wrt-host",
    "wrt-host?/std",
    "wrt-instructions/std",
    "wrt-intercept/std",
    "dep:wrt-platform",
    "wrt-platform?/std",
    "wrt-sync/std",
    "wrt-foundation/std"]

# Allocation support for no_std environments
alloc = [
    "wrt-foundation/alloc",
    "wrt-format/alloc",
    "wrt-host?/alloc",
    "wrt-instructions/alloc",
    "wrt-intercept/alloc"]
# Debug support features
debug = ["dep:wrt-debug", "wrt-debug/line-info"]
debug-full = ["dep:wrt-debug", "wrt-debug/full-debug"]
wit-debug-integration = ["dep:wrt-debug", "wrt-debug/wit-integration", "std"]
# For compatibility with verification script
# This is a no-op since the crate is no_std by default
no_std = []
optimize = [
    "wrt-foundation/optimize",
    # "wrt-decoder/optimize",
    "wrt-instructions/optimize",
    "wrt-host?/optimize",
    "wrt-intercept/optimize"]

# Safe memory implementations
safe-memory = [
    "wrt-foundation/safe-memory"]
safety-asil-b = [
    "wrt-foundation/safety-asil-b",
    # "wrt-decoder/safety-asil-b",
    "wrt-instructions/safety-asil-b",
    "wrt-host?/safety-asil-b",
    "wrt-intercept/safety-asil-b"]
kani = []
kani-verifier = []
platform-macos = ["dep:wrt-platform", "wrt-platform?/platform-macos"]
helper-mode = ["dep:wrt-platform", "wrt-platform?/helper-mode"]

# Additional features
# Disable panic handler for library builds to avoid conflicts
safety-asil-c = ["safety-asil-b"]
safety-asil-d = ["safety-asil-c"]


