[package]
name = "wrt-host"
version.workspace = true
edition.workspace = true
description = "Host function infrastructure for the WebAssembly Runtime (WRT)"
license.workspace = true
repository.workspace = true
documentation = "https://docs.rs/wrt-host"
keywords = ["wasm", "webassembly", "runtime", "host", "component-model"]
categories = ["wasm", "no-std"]

[dependencies]
wrt-error = { workspace = true, default-features = false }
wrt-foundation = { workspace = true, default-features = false }
wrt-intercept = { workspace = true, default-features = false }
wrt-sync = { workspace = true, default-features = false }

# Std dependencies
log = { version = "0.4", optional = true }

# Feature gates
[features]
default = []
# Binary choice: std OR no_std (no alloc middle ground)
std = ["log", "wrt-foundation/std", "wrt-intercept/std", "wrt-sync/std", "wrt-foundation/wrt-allocator"]
# This crate is no_std by default, this feature is a no-op for compatibility
no_std = []
optimize = ["wrt-foundation/optimize", "wrt-intercept/optimize"]
safety = ["wrt-foundation/safety", "wrt-intercept/safety", "std"]
# Safety-critical features for ASIL-C compliance
safety-critical = ["wrt-foundation/wrt-allocator"]
kani = ["wrt-intercept/kani"]
disable-panic-handler = [
    "wrt-error/disable-panic-handler",
    "wrt-foundation/disable-panic-handler",
    "wrt-intercept/disable-panic-handler", 
    "wrt-sync/disable-panic-handler"
]

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(test)', 'cfg(kani)', 'cfg(coverage)', 'cfg(doc)'] }
# Rule 1
# pointer_cast is not a valid Rust lint
# Rule 9
missing_docs = "deny"
unsafe_code = "forbid"

[lints.clippy]
# Rule 1: Language subset
inline_asm_x86_att_syntax = "warn"
transmute_ptr_to_ref = "deny"
type_id = "deny"
dyn_trait = "warn"
float_arithmetic = "warn"
# Rule 2: Unsafe usage
ptr_offset_with_cast = "warn"
# Rule 3: Error handling & panics
unwrap_used = "warn"
panic = "warn" # Also covers Rule 4
result_unit_err = "warn"
let_underscore_drop = "warn"
must_use_candidate = "warn"
must_use_unit = "warn"
# Rule 4: Control-flow soundness
match_wildcard_for_single_variants = "warn"
never_loop = "warn"
unreachable = "warn" # Also related to Rule 4
# Rule 5: Memory & concurrency safety
static_mut_refs = "deny"
arc_mutate = "deny"
# Rule 8: Static analysis gates (CI)
pedantic = "warn"
# Rule 9: Documentation
debug_assert_with_mut_call = "warn" 