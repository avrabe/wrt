[package]
name = "wrt-host"
version.workspace = true
edition.workspace = true
description = "Host function infrastructure for the WebAssembly Runtime (WRT)"
license.workspace = true
repository.workspace = true
documentation = "https://docs.rs/wrt-host"
keywords = ["wasm", "webassembly", "runtime", "host", "component-model"]
categories = ["wasm", "no-std"]

[lints]
workspace = true

[dependencies]
wrt-error = { workspace = true, default-features = false }
wrt-foundation = { workspace = true, default-features = false }
wrt-intercept = { workspace = true, default-features = false }
wrt-sync = { workspace = true, default-features = false }

# Std dependencies
log = { version = "0.4", optional = true }

# Feature gates
[features]
default = []
# Binary choice: std OR no_std (no alloc middle ground)
std = ["log", "wrt-foundation/std", "wrt-intercept/std", "wrt-sync/std", "wrt-foundation/wrt-allocator"]
# This crate is no_std by default, this feature is a no-op for compatibility
no_std = []

# Allocation support for no_std environments
alloc = ["wrt-foundation/alloc", "wrt-intercept/alloc"]
optimize = ["wrt-foundation/optimize", "wrt-intercept/optimize"]

# Safety level presets using capability-based features
qm = ["wrt-foundation/dynamic-allocation"]
asil-a = ["wrt-foundation/bounded-collections"]
asil-b = ["wrt-foundation/bounded-collections"]
asil-c = ["wrt-foundation/static-memory-safety"]
asil-d = ["wrt-foundation/maximum-safety"]

# Legacy compatibility features
safe-memory = ["asil-b"]
safety-asil-b = ["asil-b"]
safety-asil-c = ["asil-c"]
safety-asil-d = ["asil-d"]
kani = ["wrt-intercept/kani"] 