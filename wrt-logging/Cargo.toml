[package]
name = "wrt-logging"
version.workspace = true
edition.workspace = true
description = "Logging infrastructure for the WebAssembly Runtime (WRT)"
license.workspace = true
repository.workspace = true
documentation = "https://docs.rs/wrt-logging"
keywords = ["wasm", "webassembly", "runtime", "logging", "component-model"]
categories = ["wasm", "no-std", "development-tools::debugging"]

[dependencies]
wrt-error = { workspace = true, default-features = false }
wrt-host = { workspace = true, default-features = false }
wrt-foundation = { workspace = true, default-features = false }
# No-std support (removed invalid alloc dependency)

# Optional dependencies
log = { version = "0.4", optional = true }

[features]
default = []
std = ["wrt-host/std", "wrt-foundation/std", "log"]
alloc = ["wrt-host/alloc", "wrt-foundation/alloc"]
# For compatibility with verification script
# This is a no-op since the crate is no_std by default
no_std = []
kani = ["wrt-host/kani"]

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(test)'] }
# Rule 1
# pointer_cast is not a valid Rust lint
# Rule 9
missing_docs = "deny"
unsafe_code = "forbid"

[lints.clippy]
# Rule 1: Language subset
inline_asm_x86_att_syntax = "warn"
transmute_ptr_to_ref = "deny"
type_id = "deny"
dyn_trait = "warn"
float_arithmetic = "warn"
# Rule 2: Unsafe usage
ptr_offset_with_cast = "warn"
# Rule 3: Error handling & panics
unwrap_used = "warn"
panic = "warn" # Also covers Rule 4
result_unit_err = "warn"
let_underscore_drop = "warn"
must_use_candidate = "warn"
must_use_unit = "warn"
# Rule 4: Control-flow soundness
match_wildcard_for_single_variants = "warn"
never_loop = "warn"
unreachable = "warn" # Also related to Rule 4
# Rule 5: Memory & concurrency safety
static_mut_reference = "deny"
arc_mutate = "deny"
# Rule 8: Static analysis gates (CI)
pedantic = "warn"
# Rule 9: Documentation
debug_assert_with_mut_call = "warn"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"] 