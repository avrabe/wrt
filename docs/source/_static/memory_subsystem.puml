@startuml

package "Memory Subsystem" {
  package "wrt-runtime" {
    [Memory] as Memory
    [SafeSlice] as SafeSlice
    [MemoryType] as MemType
    [MemoryMetrics] as MemMetrics
    [MemoryHelpers] as MemHelpers
    [MemoryArcExt] as MemArcExt
    
    Memory --> SafeSlice : provides
    Memory --> MemType : uses
    Memory --> MemMetrics : tracks
    Memory --> MemHelpers : uses
    Memory --> MemArcExt : implements
  }
  
  package "wrt-foundation" {
    [Limits] as Limits
    [MemoryTypes] as MemTypes
    [SafeMemory] as SafeMem
    
    MemType --> Limits
    MemType --> MemTypes
    SafeSlice --> SafeMem
  }
  
  package "wrt-instructions" {
    [MemoryOps] as MemOps
    [MemoryLoad] as MemLoad
    [MemoryStore] as MemStore
    [MemorySize] as MemSize
    [MemoryGrow] as MemGrow
    [MemoryFill] as MemFill
    [MemoryCopy] as MemCopy
    [MemoryInit] as MemInit
    
    MemOps --> MemLoad
    MemOps --> MemStore
    MemOps --> MemSize
    MemOps --> MemGrow
    MemOps --> MemFill
    MemOps --> MemCopy
    MemOps --> MemInit
    
    MemOps -[dashed]-> Memory : utilizes
  }
  
  package "Safety Mechanisms" {
    [BoundsChecking] as BoundsCheck
    [AccessValidation] as AccessValid
    [ThreadSafetyAtomics] as TsAtomics
    [ThreadSafetyRwLock] as TsRwLock
    [IntegrityVerification] as IntVerify
    [HookCallbacks] as Hooks
    
    Memory --> BoundsCheck : enforces
    Memory --> AccessValid : ensures
    Memory --> TsAtomics : uses in std
    Memory --> TsRwLock : uses in no_std
    Memory --> IntVerify : performs
    Memory --> Hooks : supports
  }
  
  package "Component Integration" {
    [ResourceMemoryManager] as ResMem
    [MemoryStrategy] as MemStrategy
    [BufferPool] as BufferPool
    
    ResMem --> Memory : manages
    MemStrategy --> Memory : uses
    BufferPool --> Memory : pools
  }
  
  package "Performance Tracking" {
    [PeakMemoryUsage] as PeakUsage
    [AccessCount] as AccessCount
    [GrowthMetrics] as GrowthMetrics
    
    MemMetrics --> PeakUsage : tracks
    MemMetrics --> AccessCount : measures
    MemMetrics --> GrowthMetrics : monitors
  }
}

@enduml 