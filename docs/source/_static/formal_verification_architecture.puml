@startuml formal_verification_architecture
!theme plain
title Formal Verification Architecture

skinparam packageStyle rectangle
skinparam component {
    BackgroundColor LightBlue
    BorderColor DarkBlue
    FontSize 12
}

package "KANI Formal Verification Infrastructure" {
    component "Verification Modules" as VM {
        [Memory Safety Proofs]
        [Safety Invariants Proofs]
        [Concurrency Proofs]
        [Resource Lifecycle Proofs]
        [Integration Proofs]
    }
    
    component "ASIL Profile System" as ASIL {
        [ASIL-A (Basic)]
        [ASIL-B (Enhanced)]
        [ASIL-C (Comprehensive)]
        [ASIL-D (Maximum)]
    }
    
    component "Dual-Mode Operation" as DMO {
        [KANI Mode]
        [Test Mode]
    }
}

package "CI/CD Integration" {
    component "GitHub Actions" as GHA {
        [Quick Verification]
        [Matrix Strategy]
        [Comprehensive Verification]
        [Scheduled Runs]
    }
    
    component "Verification Scripts" as VS {
        [kani-verify.sh]
        [check-kani-status.sh]
        [simulate-ci.sh]
    }
}

package "Evidence Generation" {
    component "Reports" as REP {
        [Verification Reports]
        [Coverage Analysis]
        [Traceability Matrix]
    }
    
    component "Compliance" as COMP {
        [ISO 26262 Evidence]
        [MISRA Compliance]
        [Safety Artifacts]
    }
}

VM --> ASIL : "Configures"
ASIL --> DMO : "Enables"
DMO --> GHA : "Triggers"
GHA --> VS : "Executes"
VS --> REP : "Generates"
REP --> COMP : "Produces"

note right of VM
  29 formal properties
  across 5 modules
end note

note right of ASIL
  Unwind limits: 3-7
  Solver: MiniSAT/CaDiCaL
  Workers: 2-8
end note

note right of DMO
  KANI: Formal verification
  Test: Fallback testing
end note

@enduml