@startuml

package "Safe Memory System" {
  package "Core Safe Memory" {
    [SafeSlice] as SafeSlice
    [MemoryProvider] as Provider
    [MemorySafety] as Safety
    [MemoryStats] as Stats
    
    SafeSlice --> Provider : provided by
    Provider ..|> Safety : implements
    Safety --> Stats : reports
  }
  
  package "Memory Providers" {
    [StdMemoryProvider] as StdProvider
    [NoStdMemoryProvider] as NoStdProvider
    
    StdProvider ..|> Provider : implements
    NoStdProvider ..|> Provider : implements
  }
  
  package "Data Integrity" {
    [Checksum] as Checksum
    [VerificationLevel] as VerifyLevel
    [IntegrityVerification] as Verify
    
    SafeSlice o--> Checksum : contains
    SafeSlice --> VerifyLevel : configures
    Verify --> Checksum : uses
  }
  
  package "Verification Levels" {
    [None] as None
    [Basic] as Basic
    [Sampling] as Sampling
    [Full] as Full
    
    VerifyLevel <|-- None : type
    VerifyLevel <|-- Basic : type
    VerifyLevel <|-- Sampling : type
    VerifyLevel <|-- Full : type
  }
  
  package "Memory Operations" {
    [MemoryRead] as Read
    [MemoryWrite] as Write
    [Slicing] as Slice
    [AccessVerification] as AccessVerify
    
    Provider --> Read : provides
    Provider --> Write : provides
    SafeSlice --> Slice : enables
    Provider --> AccessVerify : performs
  }
  
  package "Access Tracking" {
    [AccessLog] as Log
    [AccessCount] as Count
    [UniqueRegions] as Regions
    [MaxAccessSize] as MaxSize
    
    Stats o--> Log : contains
    Stats o--> Count : contains
    Stats o--> Regions : contains
    Stats o--> MaxSize : contains
  }
  
  package "Thread Safety" {
    [AtomicCounters] as Atomic
    [Mutex] as Mutex
    [ThreadSafeOperations] as ThreadSafe
    
    StdProvider --> Atomic : uses
    StdProvider --> Mutex : uses
    NoStdProvider --> Atomic : uses
    ThreadSafe --> Atomic : utilizes
  }
  
  package "Integration" {
    [MemoryInstance] as MemInst
    [ResourceManager] as ResMan
    [CanonicalABI] as Canonical
    
    MemInst --> Provider : uses
    ResMan --> SafeSlice : utilizes
    Canonical --> SafeSlice : operates on
  }
}

@enduml 