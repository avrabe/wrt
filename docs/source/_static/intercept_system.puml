@startuml

package "Intercept System" {
  package "Core Interception" {
    [LinkInterceptor] as Interceptor
    [LinkInterceptorStrategy] as Strategy
    [InterceptionResult] as Result
    [Modification] as Mod
    
    Interceptor o--> Strategy : contains
    Interceptor --> Result : produces
    Result o--> Mod : contains
  }
  
  package "Interception Points" {
    [BeforeCall] as Before
    [AfterCall] as After
    [FunctionBypass] as Bypass
    [CanonicalInterception] as Canonical
    [ResourceInterception] as Resource
    [StartFunctionInterception] as Start
    
    Strategy <|.. Before : implements
    Strategy <|.. After : implements
    Strategy <|.. Bypass : implements
    Strategy <|.. Canonical : implements
    Strategy <|.. Resource : implements
    Strategy <|.. Start : implements
  }
  
  package "Built-in Strategies" {
    [LoggingStrategy] as Logging
    [FirewallStrategy] as Firewall
    [StatsStrategy] as Stats
    
    Logging ..|> Strategy : implements
    Firewall ..|> Strategy : implements
    Stats ..|> Strategy : implements
  }
  
  package "Canonical ABI Integration" {
    [LiftInterception] as Lift
    [LowerInterception] as Lower
    [ValueSerialization] as ValSer
    
    Canonical --> Lift : enables
    Canonical --> Lower : enables
    Lift --> ValSer : uses
    Lower --> ValSer : uses
  }
  
  package "Memory Strategy" {
    [ZeroCopy] as ZeroCopy
    [BoundedCopy] as BoundedCopy
    [FullIsolation] as FullIsolation
    
    Strategy --> ZeroCopy : selects
    Strategy --> BoundedCopy : selects
    Strategy --> FullIsolation : selects
  }
  
  package "Component Integration" {
    [ComponentInstance] as Instance
    [HostFunctions] as Host
    [InterceptionHooks] as Hooks
    
    Instance --> Interceptor : uses
    Host --> Interceptor : uses
    Hooks --> Interceptor : connects
  }
  
  package "Modification System" {
    [DataReplacement] as Replace
    [DataInsertion] as Insert
    [DataRemoval] as Remove
    [BinaryFormatter] as Formatter
    
    Mod <|-- Replace : type
    Mod <|-- Insert : type
    Mod <|-- Remove : type
    Mod --> Formatter : uses
  }
  
  package "Security & Verification" {
    [FirewallRules] as Rules
    [InterceptVerification] as Verify
    [BypassControl] as BypassCtrl
    
    Firewall --> Rules : applies
    Strategy --> Verify : undergoes
    Bypass --> BypassCtrl : controlled by
  }
}

@enduml 