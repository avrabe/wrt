# Workflow for deploying Sphinx documentation to GitHub Pages
name: Deploy Documentation to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
                                   
      - name: Setup Rust and build API docs
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Check if just is available
        id: check-just
        run: |
            if command -v just &> /dev/null; then
              echo "JUST_INSTALLED=true" >> $GITHUB_ENV
              echo "Just is already installed"
            else
              echo "JUST_INSTALLED=false" >> $GITHUB_ENV
              echo "Just needs to be installed"
            fi
            
      - name: Install just
        if: env.JUST_INSTALLED != 'true'
        run: cargo install just --locked

      - name: Install python dependencies
        if: env.JUST_INSTALLED != 'true'
        run: just setup-python-deps

      - name: Build Sphinx documentation
        run: just docs-with-diagrams

      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/_build/html'
          
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
