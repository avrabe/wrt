[package]
name = "wrt-sync"
version = "0.2.0"
edition = "2021"
license = "MIT"
description = "no_std synchronization primitives (Mutex, RwLock) for the WRT project."

[lib]
name = "wrt_sync"
path = "src/lib.rs"

[dependencies]
# No external dependencies needed
# Only used for formal verification when 'kani' feature is enabled
kani-verifier = { version = "0.61.0", optional = true }
# For alloc support
alloc = { version = "1.0.0", optional = true, package = "rustc-std-workspace-alloc" }

[features]
default = ["std"]
# The 'std' feature enables Rust standard library functionality like thread parking
# This allows for more efficient locking when locks are held for longer periods
std = []
# For allocation support without std
alloc = ["dep:alloc"]
# For complete no_std support
no_std = []

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(test)', 'cfg(kani)', 'cfg(coverage)', 'cfg(doc)'] }

# Configuration for Kani verification
# This will only be used when running `cargo kani`
[package.metadata.kani]
enabled-checks = ["assertion", "overflow"]
default-unwind = 3
