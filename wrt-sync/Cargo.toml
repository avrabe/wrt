[package]
name = "wrt-sync"
version.workspace = true
edition.workspace = true
license.workspace = true
description = "Synchronization primitives (Mutex, RwLock) for the WRT WebAssembly runtime with no_std support"
repository = "https://github.com/avrabe/wrt"
documentation = "https://docs.rs/wrt-sync"
keywords = ["wasm", "webassembly", "runtime", "no-std", "sync"]
categories = ["wasm", "no-std", "concurrency"]

[lib]
name = "wrt_sync"
path = "src/lib.rs"

[dependencies]
# No external dependencies needed
# Only used for formal verification when 'kani' feature is enabled
kani-verifier = { version = "0.61.0", optional = true }
# For alloc support
alloc = { version = "1.0.0", optional = true, package = "rustc-std-workspace-alloc" }

[features]
default = ["std"]
# The 'std' feature enables Rust standard library functionality like thread parking
# This allows for more efficient locking when locks are held for longer periods
std = []
# For allocation support without std
alloc = ["dep:alloc"]
# For complete no_std support
no_std = []
# Performance optimization
optimize = []
# Safety features
safety = ["alloc"]
# Optional feature for formal verification using Kani
kani = ["dep:kani-verifier"]

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(test)', 'cfg(kani)', 'cfg(coverage)', 'cfg(doc)'] }
# Rule 1
# pointer_cast = "deny" // Removed, not a standard lint
# Rule 9
missing_docs = "deny"

[lints.clippy]
# Rule 1: Language subset
inline_asm_x86_att_syntax = "warn"
transmute_ptr_to_ref = "deny"
float_arithmetic = "warn"
# Rule 2: Unsafe usage
ptr_offset_with_cast = "warn"
# Rule 3: Error handling & panics
unwrap_used = "deny"
panic = "deny"
result_unit_err = "warn"
must_use_candidate = "warn"
must_use_unit = "warn"
# Rule 4: Control-flow soundness
match_wildcard_for_single_variants = "warn"
never_loop = "warn"
unreachable = "deny"
# Rule 8: Static analysis gates (CI)
pedantic = "warn"
# Rule 9: Documentation
debug_assert_with_mut_call = "warn"

# Configuration for Kani verification
# This will only be used when running `cargo kani`
[package.metadata.kani]
enabled-checks = ["assertion", "overflow"]
default-unwind = 3

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
