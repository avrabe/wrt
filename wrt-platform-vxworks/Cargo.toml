[package]
name = "wrt-platform-vxworks"
version = "0.1.0"
edition = "2021"
authors = ["External Developer <external@example.com>"]
license = "MIT"
description = "External VxWorks platform implementation for WRT - demonstrates how to extend platform support"
readme = "README.md"
keywords = ["webassembly", "wasm", "runtime", "vxworks", "platform"]
categories = ["wasm", "os", "embedded"]

[dependencies]
# Core WRT dependencies
wrt-platform = { path = "../wrt-platform", default-features = false }
wrt-error = { path = "../wrt-error", default-features = false }

# VxWorks-specific dependencies (would be real VxWorks SDK in production)
# vxworks-sdk = { version = "7.0", optional = true }

[features]
default = ["rtp"] # Default to RTP (user space) mode

# VxWorks execution contexts
rtp = [] # Real-Time Process (user space applications)
lkm = [] # Loadable Kernel Module (kernel space)

# Feature compatibility with wrt-platform
std = ["wrt-platform/std", "wrt-error/std"]
alloc = ["wrt-platform/alloc", "wrt-error/alloc"]
no_std = []

# Enhanced VxWorks features
memory-partitions = [] # Use dedicated memory partitions
priority-inheritance = [] # Enable priority inheritance for mutexes
real-time-extensions = [] # Extended real-time capabilities

[dev-dependencies]
criterion = { version = "0.6", features = ["html_reports"] }

[[example]]
name = "vxworks_basic_usage"
required-features = ["rtp"]

[[example]]
name = "vxworks_kernel_module"
required-features = ["lkm"]

[[example]]
name = "vxworks_memory_partitions"
required-features = ["memory-partitions"]

[[bench]]
name = "vxworks_performance"
harness = false

[package.metadata.docs.rs]
features = ["std", "rtp", "lkm", "memory-partitions"]
targets = ["x86_64-unknown-linux-gnu"] # Docs built on Linux but supports VxWorks