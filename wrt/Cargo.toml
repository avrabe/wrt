[package]
name = "wrt"
version = "0.1.0"
edition = "2021"
description = "WebAssembly Runtime Library"
build = "build.rs"
authors = ["The WRT Authors"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/bytecodealliance/wrt"

[dependencies]
# Dependencies
log = { version = "0.4", optional = true }
tracing = { version = "0.1", optional = true }
rayon = "1.5"
wat = "1.0"
wast = { version = "228.0.0", features = ["wasm-module", "component-model"] }
serde = { version = "1.0", features = ["derive"], optional = true }
serde_json = { version = "1.0", optional = true }
bincode = { version = "1.3", optional = true }

# For no_std support
spin = { version = "0.9.8", default-features = false, features = ["spin_mutex"], optional = true }
num-traits = "0.2.19"

[lib]
name = "wrt"
path = "src/lib.rs"
bench = false

[dev-dependencies]
criterion = "0.5"
wat = "1.0.53"
wast = { version = "228.0.0", features = ["wasm-module", "component-model"] }
tempfile = "3.8"
tracing-subscriber = "0.3"
lazy_static = "1.4"
anyhow.workspace = true
walkdir = "2.4"

[[bench]]
name = "engine_benchmarks"
harness = false

[package.metadata.cargo-udeps.ignore]
dev-dependencies = ["criterion"]

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(test)'] }

[features]
default = ["std", "serialization"]
std = ["log", "tracing"]
no_std = ["spin"]
# State serialization features
serialization = ["serde", "bincode", "serde_json", "std"]
# Proposal features
relaxed_simd = []
gc = []
function_references = []
multi_memory = []
exception_handling = []
threads = []
extended_const = []
tail_call = []
wasm_3_0 = []
wide_arithmetic = []
custom_page_sizes = []
annotations = []
# New feature for component model serialization
component-json = ["std", "serde", "serde_json"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
