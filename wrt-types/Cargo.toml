[package]
name = "wrt-types"
version.workspace = true
edition.workspace = true
description = "Type definitions for WebAssembly Runtime (WRT)"
license.workspace = true
repository = "https://github.com/avrabe/wrt"
readme = "README.md"
keywords = ["wasm", "webassembly", "types", "no_std", "component-model", "safety"]
categories = ["wasm", "no-std", "embedded", "science::math"]

[features]
# Default features for standard environments
default = [
    "std", 
    "log", 
    "component-model-core", 
    "component-model-values", 
    "component-model-fixed-lists", 
    "component-model-namespaces",
    "wrt-sync/std"
]
# Standard library support
std = ["alloc", "wrt-error/std", "log", "wrt-sync/std"]
# Allocator support for no_std environments
alloc = ["dep:alloc", "wrt-error/alloc", "wrt-sync/alloc"]

# No standard library support (using alloc since most no_std code needs allocation)
no_std = ["alloc", "wrt-error/no_std", "wrt-sync/alloc"]
# Optional feature to bypass some safety checks in performance-critical paths
optimize = []
# Additional safety features for ASIL-B compliance
safety = []
# Feature for formal verification, requires nightly for full functionality
kani = ["dep:kani-verifier"]

# Component Model features
component-model-core = []  # Basic component model support
component-model-values = []  # ü™ô Experimental values
component-model-resources = []  # Resource types
component-model-fixed-lists = []  # üîß Fixed-length lists
component-model-namespaces = []  #  Nested namespaces
component-model-async = []  # üöù Async value types and operations
component-model-error-context = []  # üìù Error context types and operations
component-model-threading = []  # üßµ Threading operations

[dependencies]
wrt-error = { path = "../wrt-error", version = "0.2.0", default-features = false }
wrt-sync = { path = "../wrt-sync", version = "0.2.0", default-features = false, features = ["alloc"] }

# For formal verification
kani-verifier = { version = "0.61.0", optional = true }

# No-std support
alloc = { version = "1.0.0", optional = true, package = "rustc-std-workspace-alloc" }

log = { version = "0.4", optional = true }

[dev-dependencies]
proptest = { version = "1.4.0", default-features = false, features = ["alloc"] }
proptest-derive = "0.4.0"
criterion = { version = "0.5", features = ["html_reports"] }

[package.metadata.kani]
default-unwind = 2

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(test)', 'cfg(kani)', 'cfg(coverage)', 'cfg(doc)'] }
unsafe_code = "forbid"
missing_docs = "deny"
static_mut_refs = "deny"
let_underscore_drop = "warn"

[lints.clippy]
inline_asm_x86_att_syntax = "deny"
transmute_ptr_to_ref = "deny"
float_arithmetic = "deny"
ptr_offset_with_cast = "deny"
unwrap_used = "deny"
expect_used = "deny"
panic = "deny"
todo = "deny"
unimplemented = "deny"
result_unit_err = "deny"
must_use_candidate = "warn"
must_use_unit = "warn"
match_wildcard_for_single_variants = "deny"
never_loop = "deny"
unreachable = "deny"
pedantic = "deny"
debug_assert_with_mut_call = "warn"
arc_with_non_send_sync = "deny"

[[bench]]
name = "safe_memory_benchmarks"
harness = false 
