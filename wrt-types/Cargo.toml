[package]
name = "wrt-types"
version = "0.2.0"
edition = "2021"
description = "Type definitions for WebAssembly Runtime (WRT)"
license = "MIT OR Apache-2.0"
repository = "https://github.com/avrabe/wrt"

[features]
# Default features for standard environments
default = [
    "std", 
    "log", 
    "component-model-core", 
    "component-model-values", 
    "component-model-fixed-lists", 
    "component-model-namespaces"
]
# Standard library support
std = ["wrt-error/std", "log"]
# Allocator support for no_std environments
alloc = ["dep:alloc", "wrt-error/alloc"]
# No standard library support (includes alloc since most no_std code needs allocation)
no_std = ["wrt-error/no_std", "alloc"]
# Optional feature to bypass some safety checks in performance-critical paths
optimize = []
# Additional safety features for ASIL-B compliance
safety = []
# Feature for formal verification, requires nightly for full functionality
kani = ["dep:kani-verifier"]

# Component Model features
component-model-core = []  # Basic component model support
component-model-values = []  # ü™ô Experimental values
component-model-resources = []  # Resource types
component-model-fixed-lists = []  # üîß Fixed-length lists
component-model-namespaces = []  #  Nested namespaces
component-model-async = []  # üöù Async value types and operations
component-model-error-context = []  # üìù Error context types and operations
component-model-threading = []  # üßµ Threading operations

[dependencies]
wrt-error = { path = "../wrt-error", version = "0.2.0" }

# For formal verification
kani-verifier = { version = "0.61.0", optional = true }

# No-std support
alloc = { version = "1.0.0", optional = true, package = "rustc-std-workspace-alloc" }

log = { version = "0.4", optional = true }

[dev-dependencies]
proptest = "1.4.0"
criterion = { version = "0.5", features = ["html_reports"] }

[package.metadata.kani]
default-unwind = 2

[lints.rust]
unsafe_code = "warn"
missing_docs = "warn"

[[bench]]
name = "safe_memory_benchmarks"
harness = false 
