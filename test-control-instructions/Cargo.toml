[package]
name = "test-control-instructions"
version.workspace = true
edition.workspace = true
description = "Test utilities for WebAssembly control instructions"
license.workspace = true
repository = "https://github.com/avrabe/wrt"
readme = "README.md"
keywords = ["wasm", "webassembly", "test", "control-flow", "utilities"]
categories = ["wasm", "development-tools::testing"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
wrt = { workspace = true, default-features = false }
wrt-runtime = { workspace = true, default-features = false }
wrt-instructions = { workspace = true, default-features = false }
wrt-decoder = { workspace = true, default-features = false }
wrt-format = { workspace = true, default-features = false }
wrt-foundation = { workspace = true, default-features = false }
wrt-error = { workspace = true, default-features = false }
wrt-test-registry = { workspace = true, default-features = false }
# For alloc support in no_std
alloc = { version = "1.0.0", optional = true, package = "rustc-std-workspace-alloc" }

[features]
default = ["std"]
std = [
    "dep:alloc",
    "wrt/std",
    "wrt-runtime/std",
    "wrt-foundation/std",
    "wrt-decoder/std",
    "wrt-instructions/std",
]
no_std = [
    "wrt/no_std",
    "wrt-runtime/no_std",
    "wrt-foundation/no_std",
    "wrt-decoder/no_std",
    "wrt-instructions/no_std",
]
alloc = [
    "wrt/alloc",
    "wrt-runtime/alloc",
    "wrt-foundation/alloc",
    "wrt-decoder/alloc",
    "wrt-instructions/alloc",
]

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(test)'] }
