[package]
name = "wrt-decoder"
version.workspace = true
edition.workspace = true
description = "WebAssembly module decoder for wrt runtime"
license.workspace = true
repository.workspace = true
readme = "README.md"
keywords = ["wasm", "webassembly", "decoder", "parser", "runtime"]
categories = ["wasm", "parsing", "no-std", "embedded"]

[lints]
workspace = true

[dependencies]
# Error handling
wrt-error = { workspace = true, default-features = false }
# Format handling
wrt-format = { workspace = true, default-features = false }
# Foundation library 
wrt-foundation = { workspace = true, default-features = false }

# Core dependencies
log = { version = "0.4", optional = true }
# WAT parsing (for testing)
wat = { version = "1.231.0", optional = true }
# TOML configuration (for tooling)
toml = { version = "0.8", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true }

[dev-dependencies]
criterion = "0.6"
tempfile = "3.8"
proptest = "1.4"
hex = "0.4"
wat = "1.231.0"

[features]
default = []
# Binary choice: std OR no_std (no alloc middle ground)
std = ["wrt-format/std", "wrt-foundation/std", "wrt-foundation/wrt-allocator", "dep:toml", "dep:serde"]
# For compatibility with verification script
# This is a no-op since the crate is no_std by default
no_std = []

# Allocation support for no_std environments
alloc = ["wrt-foundation/alloc", "wrt-format/alloc"]
optimize = []

# Safety level presets using capability-based features
qm = ["wrt-foundation/dynamic-allocation", "wrt-format/qm"]
asil-a = ["wrt-foundation/bounded-collections", "wrt-format/asil-a"]
asil-b = ["wrt-foundation/bounded-collections", "wrt-format/asil-b"]
asil-c = ["wrt-foundation/static-memory-safety", "wrt-format/asil-c"]
asil-d = ["wrt-foundation/asil-d", "wrt-format/asil-d"]

# Legacy compatibility features
safe-memory = ["asil-b"]
safety-asil-b = ["asil-b"]
safety-asil-c = ["asil-c"]
safety-asil-d = ["asil-d"]

wat = ["dep:wat", "std"]

# Component Model features
component-model-core = ["wrt-format/component-model-core"]
component-model-values = ["wrt-format/component-model-values"]
component-model-resources = ["wrt-format/component-model-resources"]
component-model-fixed-lists = ["wrt-format/component-model-fixed-lists"]
component-model-namespaces = ["wrt-format/component-model-namespaces"]
component-model-all = [
    "component-model-core",
    "component-model-values",
    "component-model-resources",
    "component-model-fixed-lists",
    "component-model-namespaces"
]

# Type conversion feature
conversion = ["wrt-format/conversion"]

# Disable panic handler for library builds to avoid conflicts
kani = []


