[package]
name = "wrt-math"
version.workspace = true
edition.workspace = true
authors.workspace = true
description = "Mathematical operations for the WRT runtime, supporting WebAssembly standards."
license.workspace = true
repository.workspace = true
documentation = "https://docs.rs/wrt-math" # TODO: Update if incorrect
readme = "README.md"
keywords = ["webassembly", "wasm", "math", "no_std"]
categories = ["wasm", "no-std"]

[features]
default = []
# Standard library support - enables use of std::f32/f64 math functions
std = ["alloc"]
# Allocator support (implicitly enabled by std)
alloc = ["dep:alloc"]
# Explicit no_std feature (useful for testing)
no_std = ["alloc"]

[dependencies]
wrt-error = { workspace = true, default-features = false }

# No-std support
alloc = { version = "1.0.0", optional = true, package = "rustc-std-workspace-alloc" }

[dev-dependencies]
# Add development dependencies here

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(test)', 'cfg(kani)', 'cfg(coverage)', 'cfg(doc)'] }
unsafe_code = "forbid"
missing_docs = "deny"
static_mut_refs = "deny"
let_underscore_drop = "warn"
# pointer_cast = "deny" # Rule 1.4 - enable if not workspace level
# unreachable_code = "deny" # Covered by clippy::unreachable

[lints.clippy]
# Safety & Correctness
inline_asm_x86_att_syntax = "deny"
transmute_ptr_to_ref = "deny"
# float_arithmetic = "deny" # Rule 1.7 - ALLOWED here because Wasm spec requires it
ptr_offset_with_cast = "deny"
unwrap_used = "deny"
expect_used = "deny"
panic = "deny"
todo = "deny"
unimplemented = "deny"
result_unit_err = "deny"
match_wildcard_for_single_variants = "deny"
never_loop = "deny"
unreachable = "deny"
# Rule 5.2
# static_mut_refs = "deny" # This is a rustc lint, covered in [lints.rust]
# Rule 5.5
arc_with_non_send_sync = "deny" # Check correct name
# Rule 9.2
debug_assert_with_mut_call = "warn"

# Style & Maintainability
pedantic = "warn" # Enable pedantic, adjust specific lints as needed
must_use_candidate = "warn"
must_use_unit = "warn"

# Explicitly allow required for Wasm ops
float_arithmetic = "warn" # Wasm requires float ops, so warn initially
cast_possible_truncation = "allow" # Needed for conversions
cast_sign_loss = "allow" # Needed for conversions/shifts
cast_possible_wrap = "allow" # Needed for conversions/shifts/counts
cast_precision_loss = "allow"
manual_range_contains = "allow" # Used in float->int conversion checks
float_cmp = "allow" # Float comparisons are inherent
missing_const_for_fn = "allow" # Polyfills/float ops often cannot be const 