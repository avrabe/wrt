[package]
name = "wrt-test-registry"
version.workspace = true
edition.workspace = true
description = "Unified test registry for WebAssembly Runtime (WRT)"
license = "MIT"
repository = "https://github.com/avrabe/wrt"

[dependencies]
# For alloc support in no_std
alloc = { version = "1.0.0", optional = true, package = "rustc-std-workspace-alloc" }
# For registering tests at runtime
lazy_static = { version = "1.4.0", optional = true }
# For ensuring tests are registered only once
once_cell = { version = "1.18.0", features = ["critical-section"] }
# For CLI argument parsing for the test runner
clap = { version = "4.4.7", features = ["derive"], optional = true }
# For colored output in terminal
colored = { version = "2.0.4", optional = true }
# For linking with static initializers
ctor = "0.2.5"

# Add missing workspace dependencies
wrt = { workspace = true }
wrt-error = { workspace = true }
wrt-types = { workspace = true }
wrt-decoder = { workspace = true }
wrt-runtime = { workspace = true }
wrt-format = { workspace = true }

[features]
default = ["std"]
std = ["lazy_static", "clap", "colored"]
no_std = ["alloc"]
alloc = ["dep:alloc"]
runner = ["std"] # CLI test runner requires std

[[bin]]
name = "wrt-test-runner"
path = "src/runner.rs"
required-features = ["runner"]

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(test)'] } 