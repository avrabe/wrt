[package]
name = "wrt-test-registry"
version.workspace = true
edition.workspace = true
authors.workspace = true
description = "Test Framework for the WebAssembly Runtime (WRT)"
license.workspace = true
repository.workspace = true
readme = "README.md"
keywords = ["webassembly", "wasm", "testing", "no_std", "wrt"]
categories = ["wasm", "no-std", "development-tools::testing"]

[features]
default = []
std = [
    "wrt/std",
    "wrt-component/std",
    "wrt-decoder/std",
    "wrt-format/std",
    "wrt-host/std",
    "wrt-instructions/std",
    "wrt-intercept/std",
    "wrt-runtime/std",
    "wrt-sync/std",
    "wrt-types/std",
    "dep:ctor",
    "dep:inventory",
    "dep:serde_json",
    "once_cell/std",
    "clap",
    "colored",
]
alloc = [
    "wrt/alloc",
    "wrt-component/alloc",
    "wrt-decoder/alloc",
    "wrt-format/alloc",
    "wrt-host/alloc",
    "wrt-instructions/alloc",
    "wrt-intercept/alloc",
    "wrt-runtime/alloc",
    "wrt-sync/alloc",
    "wrt-types/alloc",
    "dep:ctor",
    "dep:inventory",
    "dep:serde_json",
]
runner = ["std"]
no_std = []

[dependencies]
# Core crates
wrt-error = { default-features = false, workspace = true }
wrt-types = { default-features = false, workspace = true }
wrt-format = { default-features = false, workspace = true }
wrt-decoder = { default-features = false, workspace = true }
wrt-sync = { default-features = false, workspace = true }
wrt-instructions = { default-features = false, workspace = true }
wrt-intercept = { default-features = false, workspace = true }
wrt-host = { default-features = false, workspace = true }
wrt-component = { default-features = false, workspace = true }
wrt-runtime = { default-features = false, workspace = true }
wrt = { default-features = false, workspace = true }

# Dependencies with features
once_cell = { version = "1.8", default-features = false }

# Optional dependencies
ctor = { version = "0.4", optional = true }
inventory = { version = "0.3", optional = true }
serde_json = { version = "1.0", optional = true }
clap = { version = "4.1", features = ["derive"], optional = true }
colored = { version = "2.0", optional = true }

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }

[[bench]]
name = "registry_benchmark"
harness = false
required-features = ["std"]

[lints.rust]
# Rule 1
pointer_cast = "deny"
# Rule 9
missing_docs = "deny"
unsafe_code = "forbid"

[lints.clippy]
# Rule 1: Language subset
inline_asm_x86_att_syntax = "warn"
transmute_ptr_to_ref = "deny"
type_id = "deny"
dyn_trait = "warn"
float_arithmetic = "warn"
# Rule 2: Unsafe usage
ptr_offset_with_cast = "warn"
# Rule 3: Error handling & panics
unwrap_used = "warn"
panic = "warn" # Also covers Rule 4
result_unit_err = "warn"
let_underscore_drop = "warn"
must_use_candidate = "warn"
must_use_unit = "warn"
# Rule 4: Control-flow soundness
match_wildcard_for_single_variants = "warn"
never_loop = "warn"
unreachable = "warn" # Also related to Rule 4
# Rule 5: Memory & concurrency safety
static_mut_reference = "deny"
arc_mutate = "deny"
# Rule 8: Static analysis gates (CI)
pedantic = "warn"
# Rule 9: Documentation
debug_assert_with_mut_call = "warn" 